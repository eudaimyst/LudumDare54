game concept:
Players submit words using characters on screen that fit within the limited space
As a word is submitted a new boundary is drawn using the letters that made the word thus reducing the available number of words remaining

16:	I spent a long time trying to make some graphics with an animated lava background but it was literally a waste of time, looked terrible, like something from the 90s. So instead I just
	whipped up some vector shapes in photoshop which do a much better job. There's a lot of things I *could* do but with 12 hours to go and sleep still remaining I'm not too sure what my
	time would be best spent on. 
15:	turns out the word checking was really simple, just needed to remove the trailing string when importing in html5... I turned it into a simple game just with levels determined by how many
	words you can clear before running out of letters. I've taken a few hours trying to get an art style working, nothing so far, it looks terrible. I'll try vector style next
14: removing keys now works, been struggling on the word checking in html5, something funky is going on with the tables
13:	hit a hitch with color sampling the screen in solar2d as it uses a callback. I'll have to setup an onFrame loop and listen for the callback and process each color sample as they come in
	not a dealbreaker but certainly annoying as I was hoping to get key removal done before sleep
12: at the 11 hour mark and finally got the boundary point checking correctly, I think I will use the green value of the pixel to determine whether key is in the boundary,
	it's cheap and hacky and will limit art possibilities, but better than more math to split the boundary into convex areas or triangles.
	for now next step will be checking the vailidity of the word and submitting it 
11: this is harder than it should be, hitting errors in logic every step along the way, kind of can see something working but a long way to go
10:	added the boundary points for each key, took a good hour or so because of annoyances with solar2d's contentBounds using the parent groups offsets
	next step will making a shape based off those points, I plan to iterate around the circle and find the nearest point, then add them to a list to build the shape
9:	just added a quick offset fix for text on html5 (known solar2d issue) thanks to @Siu in their discord
8:	now I need to add boundary points for the keys then generate a shape with the boundary points once a letter is added to the word
7:	I was going to use a simple toggle for the letters, but I need to check if they are in the word instead and only deactivate if not
6:	hit my first snag with lots of debugging print statements to randomize the letter positions, got it eventually, oh the joys of working with lua
5:	had to add random angle offset to prevent weird math layouts where the keys were lined up in rows
4:	found a suitable layout, can see lots of potential for this concept, easier if vowels / common letters are towards the middle for example
3:	building a layoutGenerator with adjustable ring count and letter spacing
2:	will try letters in a radial layout
1:	upon drawing the keyboard layout to screen I realised it would not work for the game concept